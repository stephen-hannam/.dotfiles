Existing problems:
- smart-parens is all fucked up
- key-bindings will interfere with terminator key-bindings in -nw mode
- aggressive-indent fucks with the undo --> ditch aggressive for something better
- search highlight/clear not happening across all visible buffers
- tabularize adds extraneous white-space
- TAB doesn't tab

Cool ideas:
- map caps_lock to escape if pressed alone, and ctrl if pressed with other keys ... !

Config improvements:
- use of early init
- set gc thresh back to something smaller at end of init
- for duration of init load set file-name-handler-alist to nil; TODO: more research on what this does

Switching from/to:
- use-package to straight <-- BUT, decided I'll still use use-package with straight for easier package config
- doom-modeline -> ||| spaceline |||, OR (but prob not) telephone-line, or smart-mode-line w powerline theme, or emacs-powerline (https://github.com/jonathanchu/emacs-powerline)
- ivy/swiper/counsel/ -> vertico, orderless, consult, embark, marginalia, etc
- aggressive-indent -> ? parinfer, evil-surround
- smart-parens -> ? parinfer, evil-surround, dumbparens :),
- company -> ? corfu, cape, dabbrev-*
- ? dired -> treemacs ??
- general <- switch to everything in hydras!
- evil persistent highlighting -> idle-highlight-in-visible-buffers-mode
- evil & evil-* -> multistate: https://gitlab.com/matsievskiysv/multistate

Removing:
- ivy-rich, ivy-*
- counsel
- veri-kompass

Definitely retaining:
- stuff to make theming customization work with daemon mode
- ? autorevert, dash ?
- evil+
- hydras <-- also use conditional-hydras! -- see the github wiki on hydra
    --> also, simplify docstring with :columns (et al) attrs
- org+
- all-the-icons+
- solaire
- beacon
- rainbow+
- which-key
- magit+
- swap regions
- *anzu
- helpful
- "theming"
    Extending and/or Fixing:
    -- dired stuff -> dired-mode invoked hydra for lots of FS shortcuts
    -- undo-tree --> in side-bar, something sized just wide enough
    -- command-log-mode
    -- ? smart-parens ... replace or fix ?
    -- dired with dired-sidebar ?

Better themes:
- zerodark-theme
- wilmersdorf-emacs-theme aka doom-wilmersdorf
    -- supports solaire-mode

Adding (most likely):
- ? whicher <-- install binaries on which other packages depend ?
- ? save-place <-- save place of cursor in file --> can it be done with built-ins?
- async
- key-chords: https://github.com/waymondo/use-package-chords
- vertico + marginalia + embark + consult + orderless
- perspective -- project "work-spaces"
- ivy-yasnippet OR skeletons + abbrevmode + conditional hydras
    -- skeletons etc: https://www.gnu.org/software/emacs/manual/html_node/autotype/Wrapping-Skeletons.html
    -- does ivy-yasnippet have ivy as a prereq?
- avy
- sly
- info+
- direnv
- major-mode-hydra -- pretty-hydra
- expand-region <- quick way of precisely successively, hierarchically marking what is at point
- ggtags (w uni-ctags)
- ? git-gutter <-- is it provided by spaceline?
- auto-insert <-- initial file template based on file extension when creating file
- dashboard

Investigate:
- ace-window
- which-key-posframe
- lispy
- snails
- shell-pop
- golden-ratio
- volatile-highlights - highlight previously modified region

Redo:
- take key-bindings from removed functionality and assign it elsewhere
- key-bindings that go unused -> free or redo
- LEADER KEYS - refactor into new categories, new category -> "navigation, windows and such"
    -- 3 leaders: windows & navigation, projects & coding, text manipulation

Consider obseleting:
- general ... can I just use hydra?
- dired ... in favor of treemacs ?

My own vimrc customizations:
- tabularize -- almost there, still an annoying extra whitespace issue
- enter in normal mode adds blank line
- key bindings in general
- window splitting and resizing bindings

Aims:
- dash-board and org mode (etc) used to habitually organize work/life/study
- common env from within which to view pdfs, images, and other common things
- IDE like env for C/C++, Python, lisps, bash, tcl, verilog/systemverilog
    -- needs to work just as well with remote servers, whether that's TRAMP based, sshfs based, etc.
    -- peek preview of module decl esp. @ ports
- increase text-based efficiency by putting closer at hand short-cuts for complex actions
    -- swapping regions
    -- incr/decr
    -- form/manip table like text-forms
    -- multiple cursors
    -- auto-format and quick completions and snippets
        --- esp. init templates for new files of type
        --- quick format of module decl and inst in verilog

