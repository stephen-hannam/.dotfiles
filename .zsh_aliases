alias history='fc -li 1'

if (( $+commands[git] )); then
  alias dg='git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'
  alias dga='dg add'
  alias dgs='dg status'
  alias dgm='dg mv'
  alias dgr='dg rm'
  alias dgrc='dg rm --cached'
  alias dgc='dg commit'
  alias dgd='dg diff'
  alias dgdf='dg --no-pager diff --name-status'
  alias dgpulo='dg pull origin'
  alias dgpuso='dg push -u origin'
  
  alias g='git'
  alias ga='git add'
  alias gs='git status'
  alias gm='git mv'
  alias gr='git rm'
  alias grc='git rm --cached'
  alias gc='git commit'
  alias gd='git diff'
  alias gdf='git --no-pager diff --name-status'
  alias gpulo='git pull origin'
  alias gpuso='git push -u origin'
  alias gout='git checkout'
  
  dot_clone_(){
    if [ $# -eq 0 ]; then
      repo="stephen-hannam"
    else
      repo=$1
    fi
    git clone --separate-git-dir=$HOME/.dotfiles git@github.com:${repo}/.dotfiles.git dotfiles-tmp
    rsync --recursive --verbose --exclude '.git' dotfiles-tmp/ $HOME/
    rm -rf dotfiles-tmp
  }
  alias dotclone='dot_clone_'
fi

# some more ls aliases
llfunc(){
	case $# in
		1) ls -ahlF --group-directories-first | less -p "$1" -R ;;
		2) ls -ahlF --group-directories-first "$1" | less -p "$2" -R ;;
		*) ls -ahlF --group-directories-first | less -R ;;
	esac
}
alias ll='llfunc'

alias lu='du -sch .[!.]* * 2>/dev/null | sort -h'
alias lf='find -maxdepth 1 -type f -exec du -sch {} + 2>/dev/null | sort -h'
alias lt='ls -lt | sed -e "s/^.\{10\}[ ]*[0-9]*[ ]*\w*[ ]*\w*[ ]*[0-9]*//g"'
alias la='ls -A --group-directories-first'
alias l='ls -CF'
alias clc='clear; cdls .'

alias mv='mv -v'
alias ln='ln -v'

alias less='less -R'

# perform 'ls' after 'cd' if successful.
cdls() {
  if [ $# -eq 0 ]; then
    clear
    FARG=${HOME}
  else
    FARG="$*"
  fi
  builtin cd "$FARG"
  SUCCESS=$?
  if [ "$SUCCESS" -eq 0 ]; then
    ls -A --quoting-style=escape | head -n 100 | xargs ls -ACFSd --group-directories-first --color=force
    if [ `ls -A | wc -l` -gt 100 ]; then
      echo
      echo " ..." $((`ls -A | wc -l` - 100)) "more"
    fi
  fi
}
alias cd='cdls'

cdun(){
	if [ $# -eq 0 ]; then
		cdls ..
	else
		if [[ $1 == [0-9] ]]; then
			local x=''
			for i in $(seq ${1:-1}); do
				x="$x../"
			done
			cdls $x
		fi
	fi
}
alias ..='cdun'

alias -- -='cd -'
alias -- -1='cd -1'
alias -- -2='cd -2'
alias -- -3='cd -3'
alias -- -4='cd -4'
alias -- -5='cd -5'
alias -- -6='cd -6'
alias -- -7='cd -7'
alias -- -8='cd -8'
alias -- -9='cd -9'

#### dirs

# This alias is a convenient way to list the last few directories
# visited, with their numbers. You can then use the 'cd -n' aliases to
# jump to those directories.
alias ds='dirs -v | head -10'

alias x='exit'

the_pag(){
  ps aux | grep -i $1 | grep -v grep
}
alias pag='the_pag '

alias c+x='chmod +x '
alias c-x='chmod -x '

viv_def(){
	/usr/local/bin/stephen/run-vivado-2018.3.sh $@
}
#alias vivado='viv_def'

tidy_up_ip_folders(){
	if [ -d ./ip/ ]; then
		pushd ip
		for f in `ls -d --color=none *`; do
			pushd $f
			rm -rf ^*.(xci|tcl)
			popd
		done
		popd
	fi
}

tidy_up_vivados_mess(){
	rm -rf xsim.* 2>/dev/null
	rm -rf xvlog.* 2>/dev/null
	rm -rf .Xil 2>/dev/null
	rm -rf hd_visual 2>/dev/null
	rm -rf ip_user_files 2>/dev/null
	rm -rf managed_ip_project 2>/dev/null
	rm -rf .Xilinx 2>/dev/null
	rm .XIC.lock 2>/dev/null
	rm vivado* 2>/dev/null
	rm *_bskew_check* 2>/dev/null
	rm webtalk* 2>/dev/null
	rm usage_statistics_webtalk* 2>/dev/null
	rm tight_setup_hold_pins.txt 2>/dev/null
	rm iter_* 2>/dev/null
	rm gtwiz_* 2>/dev/null
	rm compile_simlib* 2>/dev/null
	tidy_up_ip_folders &>/dev/null
}
alias tv='tidy_up_vivados_mess'

alias khup='kill -s SIGTERM `lsof -t nohup.out`'

if (( $+commands[emacs] )); then
  alias em='emacsclient -cn -a "vim" -s stemacs'
  alias nw='emacsclient -nw -a "vim" -s stemacs'
  alias dmacs='emacs --daemon'
  alias kmacs='killall emacs'
fi

if (( $+commands[gpg] )); then
  alias gpgp='gpg -c --no-symkey-cache --cipher-algo AES256'
fi

if (( $+commands[bc] )); then
  hex2dec(){
    hex=$1
    echo "ibase=16; ${hex:u}" | bc
  }
  alias h2d='hex2dec'
fi

if (( $+commands[kitty] )); then
  alias ssk='kitty +kitten ssh'
  alias icat="kitty +kitten icat --align=left"
fi

if (( $+commands[curl] )); then
  alias get_rusty="curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh"
fi

if (( $+commands[youtube-dl] )); then
  alias youtube-mp3='youtube-dl -x --audio-format mp3'
fi

alias kwebex="ps aux | grep -i webex | grep -v grep | head -n 1 | tr -s ' ' | cut -d' ' -f2 | xargs -n 1 kill -15"
